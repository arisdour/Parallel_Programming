############################# Profiller's Results ############################# 

~$ time ./Kmeans0

Distances 243643299.263428
Distances 132333308.620056
Distances 132218783.679321
Distances 132162410.695190
Distances 132129995.967529
Distances 132109441.859619
Distances 132094893.941528
Distances 132084290.264893
Distances 132076216.277100
Distances 132069973.409180
Distances 132065269.695679
Distances 132061404.102783
Distances 132058436.514893
Distances 132055991.003296
Distances 132053937.688354
Distances 132052220.219971
Number of repetitions: 16 

real    10m56,827s
user    10m56,480s
sys     0m0,192s


gprof Kmeans0  gmon.out
Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 99.28    649.13   649.13 161600000     0.00     0.00  EuclDist
  0.95    655.37     6.24       16     0.39     0.39  EstimateCenters
  0.20    656.69     1.32       16     0.08    40.65  Classification
  0.08    657.22     0.53        1     0.53     0.53  gen_Vectors
  0.00    657.22     0.00       16     0.00     0.00  Terminate
  0.00    657.22     0.00        1     0.00     0.00  init_Centers

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
           else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
           function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
           the function in the gprof listing. If the index is
           in parenthesis it shows where it would appear in
           the gprof listing if it were to be printed.


Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.


                     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.00% of 657.22 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00  657.22                 main [1]
                1.32  649.13      16/16          Classification [2]
                6.24    0.00      16/16          EstimateCenters [4]
                0.53    0.00       1/1           gen_Vectors [5]
                0.00    0.00      16/16          Terminate [6]
                0.00    0.00       1/1           init_Centers [7]
-----------------------------------------------
                1.32  649.13      16/16          main [1]
[2]     99.0    1.32  649.13      16         Classification [2]
              649.13    0.00 161600000/161600000     EuclDist [3]
-----------------------------------------------
              649.13    0.00 161600000/161600000     Classification [2]
[3]     98.8  649.13    0.00 161600000         EuclDist [3]
-----------------------------------------------
                6.24    0.00      16/16          main [1]
[4]      0.9    6.24    0.00      16         EstimateCenters [4]
-----------------------------------------------
                0.53    0.00       1/1           main [1]
[5]      0.1    0.53    0.00       1         gen_Vectors [5]
-----------------------------------------------
                0.00    0.00      16/16          main [1]
[6]      0.0    0.00    0.00      16         Terminate [6]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[7]      0.0    0.00    0.00       1         init_Centers [7]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index      A unique number given to each element of the table.
                Index numbers are sorted numerically.
                The index number is printed next to every function name so
                it is easier to look up where the function is in the table.

     % time     This is the percentage of the `total' time that was spent
                in this function and its children.  Note that due to
                different viewpoints, functions excluded by options, etc,
                these numbers will NOT add up to 100%.

     self       This is the total amount of time spent in this function.

     children   This is the total amount of time propagated into this
                function by its children.

     called     This is the number of times the function was called.
                If the function called itself recursively, the number
                only includes non-recursive calls, and is followed by
                a `+' and the number of recursive calls.

     name       The name of the current function.  The index number is
                printed after it.  If the function is a member of a
                cycle, the cycle number is printed between the
                function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self       This is the amount of time that was propagated directly
                from the function into this parent.

     children   This is the amount of time that was propagated from
                the function's children into this parent.

     called     This is the number of times this parent called the
                function `/' the total number of times the function
                was called.  Recursive calls to the function are not
                included in the number after the `/'.

     name       This is the name of the parent.  The parent's index
                number is printed after it.  If the parent is a
                member of a cycle, the cycle number is printed between
                the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self       This is the amount of time that was propagated directly
                from the child into the function.

     children   This is the amount of time that was propagated from the
                child's children to the function.

     called     This is the number of times the function called
                this child `/' the total number of times the child
                was called.  Recursive calls by the child are not
                listed in the number after the `/'.

     name       This is the name of the child.  The child's index
                number is printed after it.  If the child is a
                member of a cycle, the cycle number is printed
                between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.


Index by function name

   [2] Classification          [3] EuclDist                [5] gen_Vectors
   [4] EstimateCenters         [6] Terminate               [7] init_Centers


   ############################# Version 1 ############################# 
1_0
   /*
time ./Kmeans
243643303.290527
132333314.613831
132218786.593384
132162409.667725
132130092.355469
132109577.648926
132095127.064331
132084753.883545
132077181.437256
132071035.599487
132066192.974976
132062202.276001
132059150.677246
132056474.785156
132054380.716309
132052550.860229
132052550.860229
Number of repetitions: 16 

real    13m43,343s
user    106m48,528s
sys     0m58,149s
/*

1_2
time ./Kmeans
243643299.263428
132333308.620056
132218783.679321
132162410.695190
132129995.967529
132109441.859619
132094893.941528
132084290.264893
132076216.277100
132069973.409180
132065269.695679
132061404.102783
132058436.514893
132055991.003296
132053937.688354
132052220.219971
132052220.219971
Number of repetitions: 16 

real    2m15,967s
user    17m5,818s
sys     0m0,820s

*/ 


1_2

/*OUTPUT:
time ./Kmeans
243643299.263428
132333308.620056
132218783.679321
132162410.695190
132129995.967529
132109441.859619
132094893.941528
132084290.264893
132076216.277100
132069973.409180
132065269.695679
132061404.102783
132058436.514893
132055991.003296
132053937.688354
132052220.219971
Number of repetitions: 16 

real    2m11,060s
user    17m6,984s
sys     0m0,700s

*/



   ############################# Version 2 ############################# 



/*
Guided First Loop

time ./Kmeans
243643299.263428
132333308.620056
132218783.679321
132162410.695190
132129995.967529
132109441.859619
132094893.941528
132084290.264893
132076216.277100
132069973.409180
132065269.695679
132061404.102783
132058436.514893
132055991.003296
132053937.688354
132052220.219971
Number of repetitions: 16 

real    1m46,978s
user    13m4,637s
sys     0m0,731s

Guided First Loop
Dynamic Second loop
time ./Kmeans
243643299.263428
132333308.620056
132218783.679321
132162410.695190
132129995.967529
132109441.859619
132094893.941528
132084290.264893
132076216.277100
132069973.409180
132065269.695679
132061404.102783
132058436.514893
132055991.003296
132053937.688354
132052220.219971
Number of repetitions: 16 

real    1m47,398s
user    13m5,075s
sys     0m0,772s


Both Loops Static

time ./Kmeans
243643299.263428
132333308.620056
132218783.679321
132162410.695190
132129995.967529
132109441.859619
132094893.941528
132084290.264893
132076216.277100
132069973.409180
132065269.695679
132061404.102783
132058436.514893
132055991.003296
132053937.688354
132052220.219971
Number of repetitions: 16 

real    1m55,073s
user    13m2,068s
sys     0m0,837s

*/